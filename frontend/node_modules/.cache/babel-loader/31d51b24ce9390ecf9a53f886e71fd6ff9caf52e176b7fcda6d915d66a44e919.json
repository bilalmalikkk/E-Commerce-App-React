{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\ecommerce-store\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  // Fetch cart from backend on load\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(\"http://localhost:5000/api/cart\");\n        const validatedCart = data.map(item => {\n          var _item$price, _item$quantity;\n          return {\n            ...item,\n            price: (_item$price = item.price) !== null && _item$price !== void 0 ? _item$price : 0,\n            quantity: (_item$quantity = item.quantity) !== null && _item$quantity !== void 0 ? _item$quantity : 1\n          };\n        }).filter(item => item.quantity > 0 && item.price > 0); // Filter invalid items\n        setCart(validatedCart);\n      } catch (err) {\n        console.error(\"Error fetching cart:\", err);\n        setCart([]);\n      }\n    };\n    fetchCart();\n  }, []);\n\n  // Sync cart with backend and update total price\n  useEffect(() => {\n    const syncCart = async () => {\n      try {\n        await axios.post(\"http://localhost:5000/api/cart\", {\n          cart\n        });\n      } catch (error) {\n        console.error(\"Error updating cart: \", error);\n      }\n    };\n    syncCart();\n    const newTotal = cart.reduce((total, item) => {\n      var _item$price2, _item$quantity2;\n      return total + ((_item$price2 = item.price) !== null && _item$price2 !== void 0 ? _item$price2 : 0) * ((_item$quantity2 = item.quantity) !== null && _item$quantity2 !== void 0 ? _item$quantity2 : 1);\n    }, 0);\n    setTotalPrice(newTotal);\n  }, [cart]);\n\n  // Add product to cart or increase quantity\n  const addToCart = product => {\n    const existingItem = cart.find(item => item.id === product.id);\n    if (existingItem) {\n      const updatedCart = cart.map(item => {\n        var _item$quantity3;\n        return item.id === product.id ? {\n          ...item,\n          quantity: ((_item$quantity3 = item.quantity) !== null && _item$quantity3 !== void 0 ? _item$quantity3 : 0) + 1\n        } : item;\n      });\n      setCart(updatedCart);\n    } else {\n      var _product$price;\n      setCart([...cart, {\n        ...product,\n        quantity: 1,\n        price: (_product$price = product.price) !== null && _product$price !== void 0 ? _product$price : 0\n      }]);\n    }\n  };\n\n  // Decrease quantity or remove item if quantity reaches 0\n  const decreaseFromCart = id => {\n    const updatedCart = cart.map(item => {\n      var _item$quantity4;\n      return item.id === id ? {\n        ...item,\n        quantity: Math.max(((_item$quantity4 = item.quantity) !== null && _item$quantity4 !== void 0 ? _item$quantity4 : 1) - 1, 0)\n      } : item;\n    }).filter(item => item.quantity > 0);\n    setCart(updatedCart);\n  };\n\n  // Remove item from cart\n  const removeFromCart = id => {\n    setCart(cart.filter(item => item.id !== id));\n  };\n\n  // Clear the cart\n  const clearCart = () => setCart([]);\n\n  // Check if item is in cart\n  const isInCart = id => cart.some(item => item.id === id);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      decreaseFromCart,\n      removeFromCart,\n      clearCart,\n      isInCart,\n      totalPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"dXA2x5G/06DgMhpoDLh+LXjQ7as=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","totalPrice","setTotalPrice","fetchCart","data","get","validatedCart","map","item","_item$price","_item$quantity","price","quantity","filter","err","console","error","syncCart","post","newTotal","reduce","total","_item$price2","_item$quantity2","addToCart","product","existingItem","find","id","updatedCart","_item$quantity3","_product$price","decreaseFromCart","_item$quantity4","Math","max","removeFromCart","clearCart","isInCart","some","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/ecommerce-store/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  // Fetch cart from backend on load\r\n  useEffect(() => {\r\n    const fetchCart = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"http://localhost:5000/api/cart\");\r\n        const validatedCart = data\r\n          .map((item) => ({\r\n            ...item,\r\n            price: item.price ?? 0,\r\n            quantity: item.quantity ?? 1,\r\n          }))\r\n          .filter((item) => item.quantity > 0 && item.price > 0); // Filter invalid items\r\n        setCart(validatedCart);\r\n      } catch (err) {\r\n        console.error(\"Error fetching cart:\", err);\r\n        setCart([]);\r\n      }\r\n    };\r\n    fetchCart();\r\n  }, []);\r\n\r\n  // Sync cart with backend and update total price\r\n  useEffect(() => {\r\n    const syncCart = async () => {\r\n      try {\r\n        await axios.post(\"http://localhost:5000/api/cart\", { cart });\r\n      } catch (error) {\r\n        console.error(\"Error updating cart: \", error);\r\n      }\r\n    };\r\n    syncCart();\r\n\r\n    const newTotal = cart.reduce(\r\n      (total, item) => total + (item.price ?? 0) * (item.quantity ?? 1),\r\n      0\r\n    );\r\n    setTotalPrice(newTotal);\r\n  }, [cart]);\r\n\r\n  // Add product to cart or increase quantity\r\n  const addToCart = (product) => {\r\n    const existingItem = cart.find((item) => item.id === product.id);\r\n    if (existingItem) {\r\n      const updatedCart = cart.map((item) =>\r\n        item.id === product.id\r\n          ? { ...item, quantity: (item.quantity ?? 0) + 1 }\r\n          : item\r\n      );\r\n      setCart(updatedCart);\r\n    } else {\r\n      setCart([...cart, { ...product, quantity: 1, price: product.price ?? 0 }]);\r\n    }\r\n  };\r\n\r\n  // Decrease quantity or remove item if quantity reaches 0\r\n  const decreaseFromCart = (id) => {\r\n    const updatedCart = cart\r\n      .map((item) =>\r\n        item.id === id ? { ...item, quantity: Math.max((item.quantity ?? 1) - 1, 0) } : item\r\n      )\r\n      .filter((item) => item.quantity > 0);\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  // Remove item from cart\r\n  const removeFromCart = (id) => {\r\n    setCart(cart.filter((item) => item.id !== id));\r\n  };\r\n\r\n  // Clear the cart\r\n  const clearCart = () => setCart([]);\r\n\r\n  // Check if item is in cart\r\n  const isInCart = (id) => cart.some((item) => item.id === id);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        addToCart,\r\n        decreaseFromCart,\r\n        removeFromCart,\r\n        clearCart,\r\n        isInCart,\r\n        totalPrice,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}